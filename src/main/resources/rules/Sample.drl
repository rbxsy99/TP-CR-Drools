package com.sample
 
import com.sample.Biopsia;
import com.sample.Medico;
import com.sample.RessoMagnetica;
import com.sample.TomografComp;
import com.sample.Urologia;
import com.sample.Utente;
import java.util.Scanner;

 
rule "Verificar suspeitas clinicas baixas"
	salience 100
	when
		exists Medico(); //Verificar se há médicos
		$u : Utente(suspeitas_clinicas == "baixas") //Analisa o utente
	then
		modify($u){
			setProxConsultaAnual(); //Deve ser acompanhado anualmente
		}
		System.out.println("[CONSULTA AGENDADA] O utente " + $u.getNome() + " tem a proxima consulta marcada para " + $u.getData_proxconsulta());
		retract($u);
end

rule "Verificar suspeitas clinicas altas"
	salience 100
	when
		exists Medico(); //Verificar se há médicos
		$u : Utente(suspeitas_clinicas == "altas") //Analisa o utente
	then
		System.out.println("O utente " + $u.getNome() + " foi encaminhado para a urologia.");
		insert(new Urologia($u)); //Encaminha o utente à urologia
		Scanner in = new Scanner(System.in);
		int op;
		//Área Urologista
		System.out.println("\nÁrea Urologia - Menu");
		do {
			System.out.println("1 - Ressonância Magnética");
			System.out.println("2 - Biopsia guiada por ultrassom");
			op = in.nextInt();
		}while(op < 1 || op > 2);
		
		switch(op){
			case 1: {
				int random_int = (int)Math.floor(Math.random()*((5-1)+1)+1);
				insertLogical(new RessoMagnetica(random_int, $u));
				break;
			}
			case 2: { 
				insertLogical(new Biopsia($u,true));
				break;
			}
			default: break;
		}
end

rule "Feita ressonância mag. com pi-rads 1-3, sem lesao focal e baixo risco"
	salience 40
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente(lesao_focal == false); // O Utente não tem lesao focal
		$m : RessoMagnetica(pirads >= 1 && pirads <= 3, utente == $u); 
	then
		modify($u){
			setProxConsultaMeses(6); //Vai ser acompanhado de 6 em 6 meses
		}
		System.out.println("[CONSULTA AGENDADA] O utente " + $u.getNome() + " vai ser acompanhado de 6 em 6 meses e tem a proxima consulta marcada para " + $u.getData_proxconsulta());
		retract($u);
end

rule "Feita ressonância mag. com pi-rads 1-3, sem lesao focal e com suspeitas clínicas ou bioquímicas"
	salience 50
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente(lesao_focal == false, suspeitas_bioquimicas == true || suspeitas_clinicas == "altas"); // O Utente não tem lesao focal e  com suspeitas clínicas ou bioquímicas
		$m : RessoMagnetica(pirads >= 1 && pirads <= 3, utente == $u); 
	then
		System.out.println("O utente " + $u.getNome() + " irá realizar uma biopsia");
		insertLogical(new Biopsia($u,true));
end

rule "Feita ressonância mag. com pi-rads 4 ou 5, é feito uma biopsia"
	salience 60
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente(); 
		$m : RessoMagnetica(pirads == 4 || pirads == 5, utente == $u);
	then
		System.out.println("O utente " + $u.getNome() + " irá realizar uma biopsia");
		insertLogical(new Biopsia($u,false));
end

rule "Feito uma biopsia com resultado negativo mas um ressonância ainda não tenha sido feita"
	salience 60
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente();
		$b : Biopsia(resultado == false, utente == $u);
		not RessoMagnetica(utente == $u);
	then
		System.out.println("O utente " + $u.getNome() + " irá realizar uma ressonância magnética");
		insertLogical(new RessoMagnetica(0,$u));
end

rule "Feito uma biopsia com resultado negativo e um ressonancia magnetica, por isso é feita uma biopsia guiada por ress.magnetica"
	salience 60
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente();
		$b : Biopsia(resultado == false, utente == $u);
		exists RessoMagnetica(utente == $u);
	then
		System.out.println("O utente " + $u.getNome() + " irá realizar uma biopsia por ressonância magnética");
		modify($b){
			setGuiada_ressomag(true); //Biopsia guiada por ressonancia magnetica
		}
		update($b);
		retract($u);
end

rule "Feito uma biopsia com resultado positivo de baixo risco, então é feita uma vigilância mensal"
	salience 80
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente();
		$b : Biopsia(resultado == true, utente == $u, risco == "baixo");
	then
		modify($u){
			setProxConsultaMeses(1); //Vai ser acompanhado mensalmente
		}
		System.out.println("[CONSULTA AGENDADA] O utente " + $u.getNome() + " vai ser acompanhado mensalmente e tem a proxima consulta marcada para " + $u.getData_proxconsulta());
		retract($u);
end


rule "Biopsia com resultado positivo de medio/alto risco, é feita uma tomografia computarizada"
	salience 80
	when
		exists Urologia(); //Verificar se existe urologista
		$u : Utente();
		$b : Biopsia(resultado == true, utente == $u, risco == "medio"  || risco == "alto");
	then
		insert(new TomografComp($u));
		System.out.println("O utente " + $u.getNome() + " irá realizar uma tomografia computarizada");
		retract($u);
end

